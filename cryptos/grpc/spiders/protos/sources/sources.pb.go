// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: spiders/protos/sources/sources.proto

package services

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SaveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentId     string          `protobuf:"bytes,1,opt,name=parentId,proto3" json:"parentId,omitempty"`
	Name         string          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Slug         string          `protobuf:"bytes,3,opt,name=slug,proto3" json:"slug,omitempty"`
	Url          string          `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	Headers      []*HttpHeader   `protobuf:"bytes,5,rep,name=headers,proto3" json:"headers,omitempty"`
	ExtractRules []*ExtractRules `protobuf:"bytes,6,rep,name=extractRules,proto3" json:"extractRules,omitempty"`
	UseProxy     bool            `protobuf:"varint,7,opt,name=useProxy,proto3" json:"useProxy,omitempty"`
	Timeout      uint32          `protobuf:"varint,8,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *SaveRequest) Reset() {
	*x = SaveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spiders_protos_sources_sources_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveRequest) ProtoMessage() {}

func (x *SaveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spiders_protos_sources_sources_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveRequest.ProtoReflect.Descriptor instead.
func (*SaveRequest) Descriptor() ([]byte, []int) {
	return file_spiders_protos_sources_sources_proto_rawDescGZIP(), []int{0}
}

func (x *SaveRequest) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *SaveRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SaveRequest) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *SaveRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *SaveRequest) GetHeaders() []*HttpHeader {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *SaveRequest) GetExtractRules() []*ExtractRules {
	if x != nil {
		return x.ExtractRules
	}
	return nil
}

func (x *SaveRequest) GetUseProxy() bool {
	if x != nil {
		return x.UseProxy
	}
	return false
}

func (x *SaveRequest) GetTimeout() uint32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

type HttpHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *HttpHeader) Reset() {
	*x = HttpHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spiders_protos_sources_sources_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HttpHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpHeader) ProtoMessage() {}

func (x *HttpHeader) ProtoReflect() protoreflect.Message {
	mi := &file_spiders_protos_sources_sources_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpHeader.ProtoReflect.Descriptor instead.
func (*HttpHeader) Descriptor() ([]byte, []int) {
	return file_spiders_protos_sources_sources_proto_rawDescGZIP(), []int{1}
}

func (x *HttpHeader) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HttpHeader) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type SaveReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SaveReply) Reset() {
	*x = SaveReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spiders_protos_sources_sources_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveReply) ProtoMessage() {}

func (x *SaveReply) ProtoReflect() protoreflect.Message {
	mi := &file_spiders_protos_sources_sources_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveReply.ProtoReflect.Descriptor instead.
func (*SaveReply) Descriptor() ([]byte, []int) {
	return file_spiders_protos_sources_sources_proto_rawDescGZIP(), []int{2}
}

func (x *SaveReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SaveReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ExtractRules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Html *HtmlExtractRules `protobuf:"bytes,2,opt,name=html,proto3" json:"html,omitempty"`
	Json *JsonExtractRules `protobuf:"bytes,3,opt,name=json,proto3" json:"json,omitempty"`
}

func (x *ExtractRules) Reset() {
	*x = ExtractRules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spiders_protos_sources_sources_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtractRules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtractRules) ProtoMessage() {}

func (x *ExtractRules) ProtoReflect() protoreflect.Message {
	mi := &file_spiders_protos_sources_sources_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtractRules.ProtoReflect.Descriptor instead.
func (*ExtractRules) Descriptor() ([]byte, []int) {
	return file_spiders_protos_sources_sources_proto_rawDescGZIP(), []int{3}
}

func (x *ExtractRules) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ExtractRules) GetHtml() *HtmlExtractRules {
	if x != nil {
		return x.Html
	}
	return nil
}

func (x *ExtractRules) GetJson() *JsonExtractRules {
	if x != nil {
		return x.Json
	}
	return nil
}

type HtmlExtractRules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Container *HtmlExtractNode    `protobuf:"bytes,1,opt,name=container,proto3" json:"container,omitempty"`
	List      *HtmlExtractNode    `protobuf:"bytes,2,opt,name=list,proto3" json:"list,omitempty"`
	Fields    []*HtmlExtractField `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *HtmlExtractRules) Reset() {
	*x = HtmlExtractRules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spiders_protos_sources_sources_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HtmlExtractRules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HtmlExtractRules) ProtoMessage() {}

func (x *HtmlExtractRules) ProtoReflect() protoreflect.Message {
	mi := &file_spiders_protos_sources_sources_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HtmlExtractRules.ProtoReflect.Descriptor instead.
func (*HtmlExtractRules) Descriptor() ([]byte, []int) {
	return file_spiders_protos_sources_sources_proto_rawDescGZIP(), []int{4}
}

func (x *HtmlExtractRules) GetContainer() *HtmlExtractNode {
	if x != nil {
		return x.Container
	}
	return nil
}

func (x *HtmlExtractRules) GetList() *HtmlExtractNode {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *HtmlExtractRules) GetFields() []*HtmlExtractField {
	if x != nil {
		return x.Fields
	}
	return nil
}

type HtmlExtractNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Selector string `protobuf:"bytes,1,opt,name=selector,proto3" json:"selector,omitempty"`
	Attr     string `protobuf:"bytes,2,opt,name=attr,proto3" json:"attr,omitempty"`
	Index    uint32 `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *HtmlExtractNode) Reset() {
	*x = HtmlExtractNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spiders_protos_sources_sources_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HtmlExtractNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HtmlExtractNode) ProtoMessage() {}

func (x *HtmlExtractNode) ProtoReflect() protoreflect.Message {
	mi := &file_spiders_protos_sources_sources_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HtmlExtractNode.ProtoReflect.Descriptor instead.
func (*HtmlExtractNode) Descriptor() ([]byte, []int) {
	return file_spiders_protos_sources_sources_proto_rawDescGZIP(), []int{5}
}

func (x *HtmlExtractNode) GetSelector() string {
	if x != nil {
		return x.Selector
	}
	return ""
}

func (x *HtmlExtractNode) GetAttr() string {
	if x != nil {
		return x.Attr
	}
	return ""
}

func (x *HtmlExtractNode) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type HtmlExtractField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string           `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Node         *HtmlExtractNode `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	Match        string           `protobuf:"bytes,3,opt,name=match,proto3" json:"match,omitempty"`
	RegexReplace []*RegexReplace  `protobuf:"bytes,4,rep,name=regexReplace,proto3" json:"regexReplace,omitempty"`
	TextReplace  []*TextReplace   `protobuf:"bytes,5,rep,name=textReplace,proto3" json:"textReplace,omitempty"`
}

func (x *HtmlExtractField) Reset() {
	*x = HtmlExtractField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spiders_protos_sources_sources_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HtmlExtractField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HtmlExtractField) ProtoMessage() {}

func (x *HtmlExtractField) ProtoReflect() protoreflect.Message {
	mi := &file_spiders_protos_sources_sources_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HtmlExtractField.ProtoReflect.Descriptor instead.
func (*HtmlExtractField) Descriptor() ([]byte, []int) {
	return file_spiders_protos_sources_sources_proto_rawDescGZIP(), []int{6}
}

func (x *HtmlExtractField) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HtmlExtractField) GetNode() *HtmlExtractNode {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *HtmlExtractField) GetMatch() string {
	if x != nil {
		return x.Match
	}
	return ""
}

func (x *HtmlExtractField) GetRegexReplace() []*RegexReplace {
	if x != nil {
		return x.RegexReplace
	}
	return nil
}

func (x *HtmlExtractField) GetTextReplace() []*TextReplace {
	if x != nil {
		return x.TextReplace
	}
	return nil
}

type JsonExtractRules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Container string              `protobuf:"bytes,1,opt,name=container,proto3" json:"container,omitempty"`
	List      string              `protobuf:"bytes,2,opt,name=list,proto3" json:"list,omitempty"`
	Fields    []*JsonExtractField `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *JsonExtractRules) Reset() {
	*x = JsonExtractRules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spiders_protos_sources_sources_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JsonExtractRules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JsonExtractRules) ProtoMessage() {}

func (x *JsonExtractRules) ProtoReflect() protoreflect.Message {
	mi := &file_spiders_protos_sources_sources_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JsonExtractRules.ProtoReflect.Descriptor instead.
func (*JsonExtractRules) Descriptor() ([]byte, []int) {
	return file_spiders_protos_sources_sources_proto_rawDescGZIP(), []int{7}
}

func (x *JsonExtractRules) GetContainer() string {
	if x != nil {
		return x.Container
	}
	return ""
}

func (x *JsonExtractRules) GetList() string {
	if x != nil {
		return x.List
	}
	return ""
}

func (x *JsonExtractRules) GetFields() []*JsonExtractField {
	if x != nil {
		return x.Fields
	}
	return nil
}

type JsonExtractField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Path         string          `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Match        string          `protobuf:"bytes,3,opt,name=match,proto3" json:"match,omitempty"`
	RegexReplace []*RegexReplace `protobuf:"bytes,4,rep,name=regexReplace,proto3" json:"regexReplace,omitempty"`
	TextReplace  []*TextReplace  `protobuf:"bytes,5,rep,name=textReplace,proto3" json:"textReplace,omitempty"`
}

func (x *JsonExtractField) Reset() {
	*x = JsonExtractField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spiders_protos_sources_sources_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JsonExtractField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JsonExtractField) ProtoMessage() {}

func (x *JsonExtractField) ProtoReflect() protoreflect.Message {
	mi := &file_spiders_protos_sources_sources_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JsonExtractField.ProtoReflect.Descriptor instead.
func (*JsonExtractField) Descriptor() ([]byte, []int) {
	return file_spiders_protos_sources_sources_proto_rawDescGZIP(), []int{8}
}

func (x *JsonExtractField) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *JsonExtractField) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *JsonExtractField) GetMatch() string {
	if x != nil {
		return x.Match
	}
	return ""
}

func (x *JsonExtractField) GetRegexReplace() []*RegexReplace {
	if x != nil {
		return x.RegexReplace
	}
	return nil
}

func (x *JsonExtractField) GetTextReplace() []*TextReplace {
	if x != nil {
		return x.TextReplace
	}
	return nil
}

type RegexReplace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pattern string `protobuf:"bytes,1,opt,name=pattern,proto3" json:"pattern,omitempty"`
	Value   string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *RegexReplace) Reset() {
	*x = RegexReplace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spiders_protos_sources_sources_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegexReplace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegexReplace) ProtoMessage() {}

func (x *RegexReplace) ProtoReflect() protoreflect.Message {
	mi := &file_spiders_protos_sources_sources_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegexReplace.ProtoReflect.Descriptor instead.
func (*RegexReplace) Descriptor() ([]byte, []int) {
	return file_spiders_protos_sources_sources_proto_rawDescGZIP(), []int{9}
}

func (x *RegexReplace) GetPattern() string {
	if x != nil {
		return x.Pattern
	}
	return ""
}

func (x *RegexReplace) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type TextReplace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text  string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *TextReplace) Reset() {
	*x = TextReplace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spiders_protos_sources_sources_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextReplace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextReplace) ProtoMessage() {}

func (x *TextReplace) ProtoReflect() protoreflect.Message {
	mi := &file_spiders_protos_sources_sources_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextReplace.ProtoReflect.Descriptor instead.
func (*TextReplace) Descriptor() ([]byte, []int) {
	return file_spiders_protos_sources_sources_proto_rawDescGZIP(), []int{10}
}

func (x *TextReplace) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *TextReplace) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_spiders_protos_sources_sources_proto protoreflect.FileDescriptor

var file_spiders_protos_sources_sources_proto_rawDesc = []byte{
	0x0a, 0x24, 0x73, 0x70, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x29, 0x74, 0x61, 0x6f, 0x6e, 0x69, 0x75, 0x2e, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x73, 0x2e, 0x73, 0x70, 0x69, 0x64,
	0x65, 0x72, 0x73, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x22, 0xc7, 0x02, 0x0a, 0x0b, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x73, 0x6c, 0x75, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x4f, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x74, 0x61, 0x6f, 0x6e, 0x69,
	0x75, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x73, 0x2e, 0x73,
	0x70, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52,
	0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x5b, 0x0a, 0x0c, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37,
	0x2e, 0x74, 0x61, 0x6f, 0x6e, 0x69, 0x75, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x63, 0x72,
	0x61, 0x77, 0x6c, 0x73, 0x2e, 0x73, 0x70, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x0c, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x78,
	0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x75, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x78,
	0x79, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0x36, 0x0a, 0x0a, 0x48,
	0x74, 0x74, 0x70, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x3f, 0x0a, 0x09, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0xc4, 0x01, 0x0a, 0x0c, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x4f, 0x0a, 0x04, 0x68, 0x74, 0x6d,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x74, 0x61, 0x6f, 0x6e, 0x69, 0x75,
	0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x73, 0x2e, 0x73, 0x70,
	0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x48, 0x74, 0x6d, 0x6c, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52,
	0x75, 0x6c, 0x65, 0x73, 0x52, 0x04, 0x68, 0x74, 0x6d, 0x6c, 0x12, 0x4f, 0x0a, 0x04, 0x6a, 0x73,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x74, 0x61, 0x6f, 0x6e, 0x69,
	0x75, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x73, 0x2e, 0x73,
	0x70, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x4a, 0x73, 0x6f, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x22, 0x91, 0x02, 0x0a, 0x10,
	0x48, 0x74, 0x6d, 0x6c, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73,
	0x12, 0x58, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x74, 0x61, 0x6f, 0x6e, 0x69, 0x75, 0x2e, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x2e, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x73, 0x2e, 0x73, 0x70, 0x69, 0x64, 0x65, 0x72,
	0x73, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x48, 0x74, 0x6d, 0x6c, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52,
	0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x4e, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x74, 0x61, 0x6f, 0x6e, 0x69,
	0x75, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x73, 0x2e, 0x73,
	0x70, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x48, 0x74, 0x6d, 0x6c, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x06, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x74, 0x61, 0x6f,
	0x6e, 0x69, 0x75, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x73,
	0x2e, 0x73, 0x70, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x48, 0x74, 0x6d, 0x6c, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22,
	0x57, 0x0a, 0x0f, 0x48, 0x74, 0x6d, 0x6c, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4e, 0x6f,
	0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x61, 0x74, 0x74, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x74,
	0x74, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xc3, 0x02, 0x0a, 0x10, 0x48, 0x74, 0x6d,
	0x6c, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x4e, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3a, 0x2e, 0x74, 0x61, 0x6f, 0x6e, 0x69, 0x75, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x63,
	0x72, 0x61, 0x77, 0x6c, 0x73, 0x2e, 0x73, 0x70, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x48, 0x74, 0x6d, 0x6c,
	0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6e, 0x6f, 0x64,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x5b, 0x0a, 0x0c, 0x72, 0x65, 0x67, 0x65, 0x78,
	0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e,
	0x74, 0x61, 0x6f, 0x6e, 0x69, 0x75, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x63, 0x72, 0x61,
	0x77, 0x6c, 0x73, 0x2e, 0x73, 0x70, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x65, 0x78, 0x52,
	0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x67, 0x65, 0x78, 0x52, 0x65, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x12, 0x58, 0x0a, 0x0b, 0x74, 0x65, 0x78, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x74, 0x61, 0x6f, 0x6e,
	0x69, 0x75, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x73, 0x2e,
	0x73, 0x70, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x52, 0x0b, 0x74, 0x65, 0x78, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x22, 0x99,
	0x01, 0x0a, 0x10, 0x4a, 0x73, 0x6f, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x75,
	0x6c, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x74, 0x61, 0x6f, 0x6e, 0x69, 0x75, 0x2e, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x73, 0x2e, 0x73, 0x70, 0x69, 0x64,
	0x65, 0x72, 0x73, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x4a, 0x73, 0x6f, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x87, 0x02, 0x0a, 0x10, 0x4a,
	0x73, 0x6f, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x5b, 0x0a,
	0x0c, 0x72, 0x65, 0x67, 0x65, 0x78, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x74, 0x61, 0x6f, 0x6e, 0x69, 0x75, 0x2e, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x2e, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x73, 0x2e, 0x73, 0x70, 0x69, 0x64, 0x65, 0x72,
	0x73, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x52, 0x65, 0x67, 0x65, 0x78, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x52, 0x0c, 0x72, 0x65,
	0x67, 0x65, 0x78, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x12, 0x58, 0x0a, 0x0b, 0x74, 0x65,
	0x78, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x36, 0x2e, 0x74, 0x61, 0x6f, 0x6e, 0x69, 0x75, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x63,
	0x72, 0x61, 0x77, 0x6c, 0x73, 0x2e, 0x73, 0x70, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x54, 0x65, 0x78, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x52, 0x0b, 0x74, 0x65, 0x78, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x22, 0x3e, 0x0a, 0x0c, 0x52, 0x65, 0x67, 0x65, 0x78, 0x52, 0x65, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x37, 0x0a, 0x0b, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0x81, 0x01,
	0x0a, 0x07, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x76, 0x0a, 0x04, 0x53, 0x61, 0x76,
	0x65, 0x12, 0x36, 0x2e, 0x74, 0x61, 0x6f, 0x6e, 0x69, 0x75, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x2e, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x73, 0x2e, 0x73, 0x70, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61,
	0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x74, 0x61, 0x6f, 0x6e,
	0x69, 0x75, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x73, 0x2e,
	0x73, 0x70, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x42, 0x2b, 0x5a, 0x29, 0x74, 0x61, 0x6f, 0x6e, 0x69, 0x75, 0x2e, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x2f, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x73, 0x2f, 0x73, 0x70, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_spiders_protos_sources_sources_proto_rawDescOnce sync.Once
	file_spiders_protos_sources_sources_proto_rawDescData = file_spiders_protos_sources_sources_proto_rawDesc
)

func file_spiders_protos_sources_sources_proto_rawDescGZIP() []byte {
	file_spiders_protos_sources_sources_proto_rawDescOnce.Do(func() {
		file_spiders_protos_sources_sources_proto_rawDescData = protoimpl.X.CompressGZIP(file_spiders_protos_sources_sources_proto_rawDescData)
	})
	return file_spiders_protos_sources_sources_proto_rawDescData
}

var file_spiders_protos_sources_sources_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_spiders_protos_sources_sources_proto_goTypes = []interface{}{
	(*SaveRequest)(nil),      // 0: taoniu.local.crawls.spiders.grpc.services.SaveRequest
	(*HttpHeader)(nil),       // 1: taoniu.local.crawls.spiders.grpc.services.HttpHeader
	(*SaveReply)(nil),        // 2: taoniu.local.crawls.spiders.grpc.services.SaveReply
	(*ExtractRules)(nil),     // 3: taoniu.local.crawls.spiders.grpc.services.ExtractRules
	(*HtmlExtractRules)(nil), // 4: taoniu.local.crawls.spiders.grpc.services.HtmlExtractRules
	(*HtmlExtractNode)(nil),  // 5: taoniu.local.crawls.spiders.grpc.services.HtmlExtractNode
	(*HtmlExtractField)(nil), // 6: taoniu.local.crawls.spiders.grpc.services.HtmlExtractField
	(*JsonExtractRules)(nil), // 7: taoniu.local.crawls.spiders.grpc.services.JsonExtractRules
	(*JsonExtractField)(nil), // 8: taoniu.local.crawls.spiders.grpc.services.JsonExtractField
	(*RegexReplace)(nil),     // 9: taoniu.local.crawls.spiders.grpc.services.RegexReplace
	(*TextReplace)(nil),      // 10: taoniu.local.crawls.spiders.grpc.services.TextReplace
}
var file_spiders_protos_sources_sources_proto_depIdxs = []int32{
	1,  // 0: taoniu.local.crawls.spiders.grpc.services.SaveRequest.headers:type_name -> taoniu.local.crawls.spiders.grpc.services.HttpHeader
	3,  // 1: taoniu.local.crawls.spiders.grpc.services.SaveRequest.extractRules:type_name -> taoniu.local.crawls.spiders.grpc.services.ExtractRules
	4,  // 2: taoniu.local.crawls.spiders.grpc.services.ExtractRules.html:type_name -> taoniu.local.crawls.spiders.grpc.services.HtmlExtractRules
	7,  // 3: taoniu.local.crawls.spiders.grpc.services.ExtractRules.json:type_name -> taoniu.local.crawls.spiders.grpc.services.JsonExtractRules
	5,  // 4: taoniu.local.crawls.spiders.grpc.services.HtmlExtractRules.container:type_name -> taoniu.local.crawls.spiders.grpc.services.HtmlExtractNode
	5,  // 5: taoniu.local.crawls.spiders.grpc.services.HtmlExtractRules.list:type_name -> taoniu.local.crawls.spiders.grpc.services.HtmlExtractNode
	6,  // 6: taoniu.local.crawls.spiders.grpc.services.HtmlExtractRules.fields:type_name -> taoniu.local.crawls.spiders.grpc.services.HtmlExtractField
	5,  // 7: taoniu.local.crawls.spiders.grpc.services.HtmlExtractField.node:type_name -> taoniu.local.crawls.spiders.grpc.services.HtmlExtractNode
	9,  // 8: taoniu.local.crawls.spiders.grpc.services.HtmlExtractField.regexReplace:type_name -> taoniu.local.crawls.spiders.grpc.services.RegexReplace
	10, // 9: taoniu.local.crawls.spiders.grpc.services.HtmlExtractField.textReplace:type_name -> taoniu.local.crawls.spiders.grpc.services.TextReplace
	8,  // 10: taoniu.local.crawls.spiders.grpc.services.JsonExtractRules.fields:type_name -> taoniu.local.crawls.spiders.grpc.services.JsonExtractField
	9,  // 11: taoniu.local.crawls.spiders.grpc.services.JsonExtractField.regexReplace:type_name -> taoniu.local.crawls.spiders.grpc.services.RegexReplace
	10, // 12: taoniu.local.crawls.spiders.grpc.services.JsonExtractField.textReplace:type_name -> taoniu.local.crawls.spiders.grpc.services.TextReplace
	0,  // 13: taoniu.local.crawls.spiders.grpc.services.Sources.Save:input_type -> taoniu.local.crawls.spiders.grpc.services.SaveRequest
	2,  // 14: taoniu.local.crawls.spiders.grpc.services.Sources.Save:output_type -> taoniu.local.crawls.spiders.grpc.services.SaveReply
	14, // [14:15] is the sub-list for method output_type
	13, // [13:14] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_spiders_protos_sources_sources_proto_init() }
func file_spiders_protos_sources_sources_proto_init() {
	if File_spiders_protos_sources_sources_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_spiders_protos_sources_sources_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spiders_protos_sources_sources_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HttpHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spiders_protos_sources_sources_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spiders_protos_sources_sources_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtractRules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spiders_protos_sources_sources_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HtmlExtractRules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spiders_protos_sources_sources_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HtmlExtractNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spiders_protos_sources_sources_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HtmlExtractField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spiders_protos_sources_sources_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JsonExtractRules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spiders_protos_sources_sources_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JsonExtractField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spiders_protos_sources_sources_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegexReplace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spiders_protos_sources_sources_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextReplace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_spiders_protos_sources_sources_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_spiders_protos_sources_sources_proto_goTypes,
		DependencyIndexes: file_spiders_protos_sources_sources_proto_depIdxs,
		MessageInfos:      file_spiders_protos_sources_sources_proto_msgTypes,
	}.Build()
	File_spiders_protos_sources_sources_proto = out.File
	file_spiders_protos_sources_sources_proto_rawDesc = nil
	file_spiders_protos_sources_sources_proto_goTypes = nil
	file_spiders_protos_sources_sources_proto_depIdxs = nil
}
