syntax = "proto3";

package taoniu.local.crawls.spiders.grpc.services;
option go_package = "taoniu.local/crawls/spiders/grpc/services";

import "google/protobuf/timestamp.proto";

service Sources {
  rpc Get(GetRequest) returns (GetReply) {}
  rpc GetBySlug(GetBySlugRequest) returns (GetBySlugReply) {}
  rpc Save(SaveRequest) returns (SaveReply) {}
}

message GetRequest {
  string Id = 1;
}

message GetReply {
  bool success = 1;
  string message = 2;
  SourceInfo data = 3;
}

message GetBySlugRequest {
  string Slug = 1;
}

message GetBySlugReply {
  bool success = 1;
  string message = 2;
  SourceInfo data = 3;
}

message SourceInfo {
  string id = 1;
  string parentId = 2;
  string name = 3;
  string slug = 4;
  string url = 5;
  repeated HttpHeader headers = 6;
  bool useProxy = 7;
  int32 timeout = 8;
  repeated ExtractRules extractRules = 9;
  repeated ExtractResult extractResult = 10;
  int32 status = 11;
  google.protobuf.Timestamp createdAt = 12;
  google.protobuf.Timestamp updatedAt = 13;
}

message SaveRequest {
  string parentId = 1;
  string name = 2;
  string slug = 3;
  string url = 4;
  repeated HttpHeader headers = 5;
  Params params = 6;
  repeated ExtractRules extractRules = 7;
  bool useProxy = 8;
  uint32 timeout = 9;
}

message HttpHeader {
  string name = 1;
  string value = 2;
}

message Params {
  repeated Split split = 1;
  string scroll = 2;
  repeated HttpQuery query = 3;
}

message Split {
  string parent = 1;
  repeated string path = 2;
}

message HttpQuery {
  string name = 1;
  string value = 2;
  string default = 3;
}

message SaveReply {
  bool success = 1;
  string message = 2;
}

message ExtractRules {
  string name = 1;
  HtmlExtractRules html = 2;
  JsonExtractRules json = 3;
}

message ExtractResult {
  string name = 1;
  string value = 2;
  repeated ExtractResult data = 3;
}

message HtmlExtractRules {
  HtmlExtractNode container = 1;
  HtmlExtractNode list = 2;
  repeated HtmlExtractField fields = 3;
}

message HtmlExtractNode {
  string selector = 1;
  string attr = 2;
  uint32 index = 3;
}

message HtmlExtractField {
  string name = 1;
  HtmlExtractNode node = 2;
  string match = 3;
  repeated RegexReplace regexReplace = 4;
  repeated TextReplace textReplace = 5;
  repeated HtmlExtractField fields = 6;
}

message JsonExtractRules {
  string container = 1;
  string list = 2;
  repeated JsonExtractField fields = 3;
}

message JsonExtractField {
  string name = 1;
  string path = 2;
  string match = 3;
  repeated RegexReplace regexReplace = 4;
  repeated TextReplace textReplace = 5;
  repeated JsonExtractField fields = 6;
}

message RegexReplace {
  string pattern = 1;
  string value = 2;
}

message TextReplace {
  string text = 1;
  string value = 2;
}